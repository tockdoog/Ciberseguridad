üñ•Ô∏è ¬øQu√© es la terminal?
La terminal (o consola) es una interfaz de texto donde puedes escribir comandos para interactuar directamente con el sistema operativo.

En lugar de hacer clic en botones o men√∫s, aqu√≠ escribes instrucciones.
Es como tener una ‚Äúl√≠nea directa‚Äù con el sistema, sin intermediarios gr√°ficos.

üìå Ejemplo: Si quieres crear una carpeta, en una interfaz gr√°fica dar√≠as clic derecho ‚Üí ‚ÄúNueva carpeta‚Äù, pero en la terminal podr√≠as escribir:
mkdir mi_carpeta

Piensa en 3 cosas distintas:
Monitor/ventana: la terminal es la ventanita negra donde escribes.
Int√©rprete: el shell es el ‚Äúcerebro‚Äù que entiende lo que tecleas.
T√∫: escribes comandos que el shell ejecuta.

üìå Analogia: la terminal es el tel√©fono üìû, el shell es la persona que te escucha üëÇ, y tus comandos son lo que dices üó£Ô∏è.

üëâ En Windows puedes abrir: PowerShell, CMD, Windows Terminal (que agrupa varias). 
En Windows tambi√©n puedes tener Git Bash o WSL para usar Bash. En Linux/macOS la app se llama usualmente Terminal.

üêö ¬øQu√© es el shell?
Bash significa Bourne Again SHell.
Es el int√©rprete que toma lo que escribes en la terminal y se lo pasa al sistema operativo para ejecutarlo.
Permite ejecutar comandos, crear scripts y automatizar tareas.

üìå Ejemplo en Bash:
echo "Hola Mundo"

Esto imprime en pantalla:
Hola Mundo

Hay muchos shells. Dos famosos:
Bash (muy com√∫n en Linux/macOS y tambi√©n disponible en Windows via Git Bash o WSL).
PowerShell (nativo de Windows, pero tambi√©n existe para Linux/macOS).

üß© La terminal ‚â† el shell: la terminal es la ventana; el shell es el int√©rprete que corre dentro de esa ventana.


üü¢ ¬øQu√© es Bash?
Bash = Bourne Again SHell.
Es un tipo de shell cl√°sico en Linux/macOS. Trabaja principalmente con texto y tuber√≠as (‚Äúpipes‚Äù) para encadenar comandos.

Ejemplos en Bash:
# Mostrar la carpeta actual
pwd

# Listar archivos
ls -la

# Crear carpeta y entrar
mkdir pruebas && cd pruebas

# Crear un archivo con texto
echo "hola" > notas.txt

# Buscar l√≠neas con 'hola'
grep 'hola' notas.txt

üîµ ¬øQu√© es PowerShell?
PowerShell es el shell moderno de Microsoft. A diferencia de Bash, su ‚Äútuber√≠a‚Äù pasa objetos (con propiedades), 
no solo texto. Eso lo hace muy potente para automatizar Windows (servicios, registro, procesos, Active Directory, etc.).

Ejemplos equivalentes en PowerShell:
# Mostrar la carpeta actual
Get-Location

# Listar archivos (alias: ls, dir)
Get-ChildItem -Force

# Crear carpeta y entrar
New-Item -ItemType Directory -Name pruebas; Set-Location pruebas

# Crear un archivo con texto
"h ola" | Set-Content notas.txt

# Buscar l√≠neas con 'hola'
Select-String -Pattern 'hola' -Path .\notas.txt


Tip: En PowerShell muchos comandos largos tienen alias cortos:
ls ‚Üí Get-ChildItem, cd ‚Üí Set-Location, pwd ‚Üí Get-Location.

‚öñÔ∏è Diferencias clave: Shell (Bash) vs PowerShell
| Tema                 | Bash (shell cl√°sico) üêö                  | PowerShell (Microsoft) üîµ                         |                          |                                           |
| -------------------- | ---------------------------------------- | ------------------------------------------------- | ------------------------ | ----------------------------------------- |
| Filosof√≠a            | Todo es **texto**                        | Todo son **objetos**                              |                          |                                           |
| Plataforma t√≠pica    | Linux/macOS (y Windows via Git Bash/WSL) | Windows (tambi√©n en Linux/macOS)                  |                          |                                           |
| Sintaxis             | Corta y muy usada en servidores          | Verbosa, muy poderosa en Windows                  |                          |                                           |
| Rutas                | `/home/usuario/`                         | `C:\Usuarios\TuUsuario\` (acepta `/` tambi√©n)     |                          |                                           |
| Variables            | `NOMBRE="Andrei"; echo $NOMBRE`          | `$name = "Andrei"; $name`                         |                          |                                           |
| Variables de entorno | `$HOME`, `$PATH`                         | `$env:USERPROFILE`, `$env:Path`                   |                          |                                           |
| Pipes                | Texto: \`ls                              | grep .txt\`                                       | Objetos: \`Get-ChildItem | Where-Object {$\_.Name -match '.txt\$'}\` |
| Scripts              | `.sh` (shebang `#!/usr/bin/env bash`)    | `.ps1` (puede requerir ajustar *ExecutionPolicy*) |                          |                                           |
